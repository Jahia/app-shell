name: Hourly Test run (Cloud)

on:
  workflow_dispatch:
  schedule:
    - cron:  '* * * * *'

jobs:
  integration-tests-standalone:
    name: Integration Tests (Standalone)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 45
    steps:
      - uses: jahia/jahia-modules-action/helper@v2
      - uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.29.2'
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - uses: actions/checkout@v3
      - name: Set additional environment variables
        shell: bash
        run: |
          CURRENT_DATE=$(date +"%M%S")
          CLOUD_ENVNAME=app-shell-${CURRENT_DATE}
          CLOUD_JAHIA_VERSION=8.1.6.0

          echo "CLOUD_JSESSIONID=${{ secrets.CLOUD_JSESSIONID }}" >> $GITHUB_ENV
          echo "CLOUD_BANDID=${{ vars.CLOUD_BANDID }}" >> $GITHUB_ENV
          echo "CLOUD_REGIONID=${{ vars.CLOUD_REGIONID }}" >> $GITHUB_ENV
          echo "CLOUD_SUBSCRIPTIONITEMID=${{ vars.CLOUD_SUBSCRIPTIONITEMID }}" >> $GITHUB_ENV
          echo "CLOUD_DOMAINSUFFIX=${{ vars.CLOUD_DOMAINSUFFIX }}" >> $GITHUB_ENV
          echo "CLOUD_ENVNAME=${CLOUD_ENVNAME}" >> $GITHUB_ENV
          echo "CLOUD_JAHIA_VERSION=${CLOUD_JAHIA_VERSION}" >> $GITHUB_ENV
          echo "JAHIA_URL=https://${CLOUD_ENVNAME}-${{ vars.CLOUD_DOMAINSUFFIX }}.internal.cloud.jahia.com/" >> $GITHUB_ENV
      - name: Display additional environment variables
        shell: bash
        run: |
          echo "JCUSTOMER_CLUSTER_ENABLED=${JAHIA_CLUSTER_ENABLED}"    
          echo "JAHIA_URL=${JAHIA_URL}"
          echo "CLOUD_JAHIA_VERSION=${CLOUD_JAHIA_VERSION}"
      - uses: jahia/jahia-modules-action/integration-tests@v2
        with:
          module_id: app-shell
          timeout_minutes: 20
          testrail_project: App Shell Module
          tests_manifest: provisioning-manifest-snapshot.yml
          jahia_image: ${{ env.CLOUD_JAHIA_VERSION }}
          should_use_build_artifacts: false
          should_skip_artifacts: true
          should_skip_notifications: false
          should_skip_testrail: false
          should_skip_zencrepes: false
          github_artifact_name: app-shell-artifacts-${{ strategy.job-index }}-${{ github.run_number }}
          ci_startup_script: ci.startup.cloud.sh
          ci_postrun_script: ci.postrun.cloud.sh
          bastion_ssh_private_key: ${{ secrets.BASTION_SSH_PRIVATE_KEY_JAHIACI }}
          jahia_license: ${{ secrets.JAHIA_LICENSE_8X_FULL }}
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_PASSWORD }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          testrail_username: ${{ secrets.TESTRAIL_USERNAME }}
          testrail_password: ${{ secrets.TESTRAIL_PASSWORD }}
          tests_report_name: Test report (Standalone)
          incident_pagerduty_api_key: ${{ secrets.INCIDENT_PAGERDUTY_API_KEY }}
          incident_pagerduty_reporter_email: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_EMAIL }}
          incident_pagerduty_reporter_id: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_ID }}
          incident_google_spreadsheet_id: ${{ secrets.INCIDENT_GOOGLE_SPREADSHEET_ID }}
          incident_google_client_email: ${{ secrets.INCIDENT_GOOGLE_CLIENT_EMAIL }}
          incident_google_api_key_base64: ${{ secrets.INCIDENT_GOOGLE_PRIVATE_KEY_BASE64 }}
          zencrepes_secret: ${{ secrets.ZENCREPES_WEBHOOK_SECRET }}
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Tests Report (Standalone)
          path: tests/artifacts/results/xml_reports/*.xml
          reporter: java-junit
          fail-on-error: 'false'