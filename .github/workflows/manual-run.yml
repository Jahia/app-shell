# This workflows can be triggered manually via the GitHub actions UI
# It is used to trigger an integration tests run using snapshot artifacts
name: Manual Tests Run

on:
  workflow_dispatch:
    inputs:
      jahia_image:
        description: 'Jahia Image'
        required: true
        default: 'jahia/jahia-ee-dev:8-SNAPSHOT'
      manifest:
        description: 'Provisioning manifest. Can be a local repository file in the tests folder or a publicly accessible link'
        required: true
        default: 'provisioning-manifest-snapshot.yml'

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: self-hosted
    steps:
      - uses: jahia/jahia-modules-action/helper@v2
      - uses: actions/checkout@v2
      - uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.29.2'
      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - uses: jahia/jahia-modules-action/integration-tests@v2
        with:
          module_id: app-shell
          testrail_project: App Shell Module
          jahia_image: ${{ github.event.inputs.jahia_image }}
          should_use_build_artifacts: false
          should_skip_artifacts: true
          should_skip_notifications: true
          should_skip_testrail: true
          should_skip_zencrepes: false
          github_artifact_name: app-shell-standalone-artifacts-${{ github.run_number }}
          bastion_ssh_private_key: ${{ secrets.BASTION_SSH_PRIVATE_KEY_JAHIACI }}
          tests_manifest: ${{ github.event.inputs.manifest }}
          jahia_license: ${{ secrets.JAHIA_LICENSE_8X_FULL }}
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_PASSWORD }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          testrail_username: ${{ secrets.TESTRAIL_USERNAME }}
          testrail_password: ${{ secrets.TESTRAIL_PASSWORD }}
          incident_pagerduty_api_key: ${{ secrets.INCIDENT_PAGERDUTY_API_KEY }}
          incident_pagerduty_reporter_email: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_EMAIL }}
          incident_pagerduty_reporter_id: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_ID }}
          incident_google_spreadsheet_id: ${{ secrets.INCIDENT_GOOGLE_SPREADSHEET_ID }}
          incident_google_client_email: ${{ secrets.INCIDENT_GOOGLE_CLIENT_EMAIL }}
          incident_google_api_key_base64: ${{ secrets.INCIDENT_GOOGLE_PRIVATE_KEY_BASE64 }}
          zencrepes_secret: ${{ secrets.ZENCREPES_WEBHOOK_SECRET }}

      # Tmate only starts if any of the previous steps fails.
      # Be careful since it also means that if a step fails the workflow will
      # keep running until it reaches the timeout.
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15